#!/usr/bin/env python

import urllib
import requests
from sys import exit, argv

from bs4 import BeautifulSoup, Comment

'''
Username and password from command line
'''
USER = argv[2]
PASS = argv[3]

'''
Action to perform on McGill library
'''
ACTION = argv[1]

BASE = "https://catalogue.mcgill.ca/F/?func=login-session"

s = requests.Session()

r = s.get(BASE)

soup = BeautifulSoup(r.text, "html.parser")

POST_LINK = soup.find("form", class_="loginsession").attrs["action"]

payload = {
        "ssl_flag":"Y",
        "func":"login-session",
        "bor_library":"MGU50",
        "login_source":"",
        "folder":"",
        "req_type":"",
        "bor_id":USER,
        "bor_verification":PASS,
        "func=login":"Sign in"
        }

header = {
        "Referer" : "https://catalogue.mcgill.ca/F/?func=login-session"
        }

r = s.post(POST_LINK, data=payload, headers=header)

def extract_comments(soup):
    comments = soup.findAll(text = lambda x: isinstance(x, Comment))
    list(map(lambda c: c.extract(), comments))
    return soup

def renew():
    loan_page = s.get(POST_LINK + "?func=bor-loan")
    loan_soup = extract_comments(BeautifulSoup(loan_page.text, "html.parser"))

    try:
        prev = loan_soup.find("span", class_ = "buttons")
    except AttributeError:
        print("Did not find any buttons. Dumping response.")
        print(loan_soup)
        exit(1)

    try:
        prev = prev.find("a", title = "Renew All")
    except AttributeError:
        print("Did not find the 'renew all' button. Dumping response.")
        print(loan_soup)
        exit(1)

    prev = prev.attrs["href"]
    RENEW_LINK = prev.split("javascript:replacePage('")[1][:-3]

    resp = BeautifulSoup(s.get(RENEW_LINK).text, "html.parser")

    print("Dumping response.")
    print(resp)

    tab = resp.findAll("table")

    if tab is None:
        print("ERROR: No tables found.")
        exit(1)

    print("Dumping tables.")
    for i in range(len(tab)):
        print("%dth table" % i)
        print(tab[i])

def lookup():
    loan_page = s.get(POST_LINK + "?func=bor-loan")
    loan_soup = extract_comments(BeautifulSoup(loan_page.text, "html.parser"))
    try:
        tables = loan_soup.findAll("table")
    except AttributeError:
        print("ERROR: Did not encounter tables on loans page. Dumping response.")
        print(loan_soup)
        exit(1)
    # Print each row
    table = tables[0]
    for tr in table.findAll("tr"):
        print(tr)

def main():
    # Now logged in in Session s.
    if ACTION == "renew":
        renew()
    if ACTION == "lookup":
        lookup()

if __name__ == "__main__":
    main()
